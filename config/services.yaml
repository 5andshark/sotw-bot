# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale:           'en'
    token:            '%env(TOKEN)%'
    adminRole:        '%env(ADMIN_ROLE)%'
    permissionsRole:  '%env(PERMISSIONS_ROLE)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
#    App\Controller\:
#        resource: '../src/Controller'
#        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    log.null:
        class: Psr\Log\NullLogger

    cache.jikan:
        class: Symfony\Component\Cache\Adapter\FilesystemAdapter
        arguments:
          - 'app.jikan'
          - 0
          - "%kernel.cache_dir%/jikan"
        public: true

    jikan:
        class: Jikan\Jikan
        public: true

    App\MyAnimeList\MyAnimeListClient:
        public: true
        class: App\MyAnimeList\MyAnimeListClient
        arguments:
          - '@cache.jikan'
          - '@jikan'

    RestCord\DiscordClient:
        class: RestCord\DiscordClient
        arguments:
          -
            token:      "%env(TOKEN)%"
            logger:     "@log.null"
        public: true

    App\Channel\SotwChannel:
        class: App\Channel\SotwChannel
        arguments:
          - '@RestCord\DiscordClient'
          - "%env(SOTW_CHANNEL_ID)%"
          - "@validator"
          - "%env(PERMISSIONS_ROLE)%"
          - '@App\MyAnimeList\MyAnimeListClient'
        public: true

    App\Channel\EmojiChannel:
        class: App\Channel\EmojiChannel
        arguments:
          - '@RestCord\DiscordClient'
          - "%env(EMOJI_CHANNEL_ID)%"
          - '@App\MyAnimeList\MyAnimeListClient'
        public: true

    App\Channel\RewatchChannel:
        class: App\Channel\RewatchChannel
        arguments:
          - '@RestCord\DiscordClient'
          - '@App\MyAnimeList\MyAnimeListClient'
          - '@validator'
          - '%env(REWATCH_CHANNEL_ID)%'
        public: true

    App\Channel\CotsChannel:
        class: App\Channel\CotsChannel
        arguments:
          - '@RestCord\DiscordClient'
          - '@App\MyAnimeList\MyAnimeListClient'
          - '@validator'
          - '%env(COTS_CHANNEL_ID)%'
          - '%env(PERMISSIONS_ROLE)%'

    App\Yasmin\Subscriber\Cots\FinishSubscriber:
        class: App\Yasmin\Subscriber\Cots\FinishSubscriber
        arguments:
          - '@App\Channel\CotsChannel'
          - '%env(COTS_SEASON)%'

    App\Yasmin\Subscriber\Cots\StartSubscriber:
        class: App\Yasmin\Subscriber\Cots\StartSubscriber
        arguments:
          - '@App\Channel\CotsChannel'
          - '%env(COTS_SEASON)%'

    App\Error\RewatchErrorDm:
        class: App\Error\RewatchErrorDm
        arguments:
          - '@RestCord\DiscordClient'
          - "@validator"
        public: true

    App\Error\CotsErrorDm:
        class: App\Error\CotsErrorDm
        arguments:
          - '@RestCord\DiscordClient'
          - "@validator"
        public: true

    App\Error\SotwErrorDm:
        class: App\Error\SotwErrorDm
        arguments:
          - '@RestCord\DiscordClient'
          - "@validator"
        public: true

    App\Yasmin\Subscriber\Cots\AutoValidateSubscriber:
        public: true
        arguments:
            $character: '@App\Channel\CotsChannel'
            $error: '@App\Error\CotsErrorDm'
            $season: "%env(COTS_SEASON)%"
        class: App\Yasmin\Subscriber\Cots\AutoValidateSubscriber
        tags:
          - { name: kernel.event_subscriber, event: yasmin.message_received}

    App\Yasmin\Subscriber\SaySubscriber:
        public: true
        arguments:
            $adminRole: "%env(ADMIN_ROLE)%"
            $discord: '@RestCord\DiscordClient'
        class: App\Yasmin\Subscriber\SaySubscriber
        tags:
          - { name: kernel.event_subscriber, event: yasmin.message_received}

    App\Yasmin\Subscriber\Sotw\AutoValidateSubsciber:
        public: true
        arguments:
            $sotw: '@App\Channel\SotwChannel'
            $error: '@App\Error\SotwErrorDm'
        class: App\Yasmin\Subscriber\Sotw\AutoValidateSubsciber
        tags:
          - { name: kernel.event_subscriber, event: yasmin.message_received}

    App\Yasmin\Subscriber\Sotw\NextSubscriber:
        public: true
        arguments:
          $sotw: '@App\Channel\SotwChannel'
        class: App\Yasmin\Subscriber\Sotw\NextSubscriber
        tags:
          - { name: kernel.event_subscriber, event: yasmin.message_received}

    App\Yasmin\Subscriber\Sotw\ForumSubscriber:
        public: true
        arguments:
          $sotw: '@App\Channel\SotwChannel'
        class: App\Yasmin\Subscriber\Sotw\ForumSubscriber
        tags:
          - { name: kernel.event_subscriber, event: yasmin.message_received}

    App\Yasmin\Subscriber\Sotw\RankingSubscriber:
        public: true
        arguments:
          $sotw: '@App\Channel\SotwChannel'
        class: App\Yasmin\Subscriber\Sotw\RankingSubscriber
        tags:
          - { name: kernel.event_subscriber, event: yasmin.message_received}

    App\Yasmin\Subscriber\Rewatch\AutoValidateSubscriber:
        public: true
        arguments:
          $rewatch: '@App\Channel\RewatchChannel'
          $error: '@App\Error\RewatchErrorDm'
        class: App\Yasmin\Subscriber\Rewatch\AutoValidateSubscriber
        tags:
          - { name: kernel.event_subscriber, event: yasmin.message_received}

    App\Yasmin\Subscriber\Rewatch\StartSubscriber:
        public: true
        arguments:
          $rewatch: '@App\Channel\RewatchChannel'
        class: App\Yasmin\Subscriber\Rewatch\StartSubscriber
        tags:
          - { name: kernel.event_subscriber, event: yasmin.message_received}

    App\Yasmin\Subscriber\Rewatch\FinishSubscriber:
        public: true
        arguments:
          $rewatch: '@App\Channel\RewatchChannel'
        class: App\Yasmin\Subscriber\Rewatch\FinishSubscriber
        tags:
          - { name: kernel.event_subscriber, event: yasmin.message_received}

    App\Yasmin\Subscriber\Rewatch\RankingSubscriber:
        public: true
        arguments:
          $rewatch: '@App\Channel\RewatchChannel'
        class: App\Yasmin\Subscriber\Rewatch\RankingSubscriber
        tags:
          - { name: kernel.event_subscriber, event: yasmin.message_received}
